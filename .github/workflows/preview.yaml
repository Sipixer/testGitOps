name: Preview Environment

on:
  pull_request:
    types: [opened, synchronize, reopened, closed]

jobs:
  preview:
    runs-on: ubuntu-latest
    if: github.event.action != 'closed'

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG_CONTENT }}" | base64 --decode > ~/.kube/config
          chmod 600 ~/.kube/config

      - name: Install ArgoCD CLI
        run: |
          curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          chmod +x /usr/local/bin/argocd

      - name: Login to ArgoCD
        run: |
          argocd login ${{ secrets.ARGOCD_SERVER }} \
            --username ${{ secrets.ARGOCD_USERNAME }} \
            --password ${{ secrets.ARGOCD_PASSWORD }} \
            --insecure

      - name: Create Preview App
        run: |
          PR_ID=${{ github.event.pull_request.number }}
          BRANCH=${{ github.head_ref }}
          NAMESPACE=preview-pr-$PR_ID

          kubectl create namespace $NAMESPACE || echo "Namespace exists"

          # Attendre que le namespace soit prêt
          until kubectl get namespace $NAMESPACE; do
          echo "Waiting for namespace $NAMESPACE to be created..."
          sleep 1
          done

          # Crée ou sync l'application ArgoCD
          argocd app create preview-pr-$PR_ID \
            --repo https://github.com/${{ github.repository }}.git \
            --path k8s/manifests \
            --dest-server https://kubernetes.default.svc \
            --dest-namespace $NAMESPACE \
            --revision $BRANCH \
            --sync-policy automated  || argocd app sync preview-pr-$PR_ID

  cleanup:
    runs-on: ubuntu-latest
    if: github.event.action == 'closed'

    steps:
      - name: Set up kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG_CONTENT }}" | base64 --decode > ~/.kube/config
          chmod 600 ~/.kube/config

      - name: Install ArgoCD CLI
        run: |
          curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          chmod +x /usr/local/bin/argocd

      - name: Login to ArgoCD
        run: |
          argocd login ${{ secrets.ARGOCD_SERVER }} \
            --username ${{ secrets.ARGOCD_USERNAME }} \
            --password ${{ secrets.ARGOCD_PASSWORD }} \
            --insecure

      - name: Delete Preview App
        run: |
          PR_ID=${{ github.event.pull_request.number }}
          argocd app delete preview-pr-$PR_ID --yes

      - name: Delete Namespace
        run: |
          NAMESPACE=preview-pr-${{ github.event.pull_request.number }}
          kubectl delete namespace $NAMESPACE || echo "Namespace already deleted"
